/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/assets/js/cart.js":
/*!*************************************!*\
  !*** ./resources/assets/js/cart.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function addCart(id, number) {
  // console.log('function working')
  var product_id = {};
  product_id.product_id = id;
  product_id.quantity = number ? number : 0;
  console.log('shu ishladi'); // if (modificationId && modificationId !== '') {
  //     product_id.modification_id = modificationId;
  // }

  $.ajax({
    url: '/add-cart',
    method: 'POST',
    data: product_id,
    dataType: 'json',
    // headers: {
    //     "X-CSRF-Token": $('meta[name="csrf-token"]').attr('content')
    // },
    success: function success(data) {
      if (data.cart) {
        console.log(data.cart.length);
        $('#top-shopping-cart-total').text(data.cart.length);
        $('#cartContainer').addClass('icon-cart-active');
      }
    },
    error: function error(data) {}
  });
}

$(document).ready(function () {
  $('.cart').click(function (e) {
    e.preventDefault();
    console.log('loging cart click');
    var elementNumber = $('.product-product').find('input[name="quantity"]'); // if(elementNumber.val())

    var product = $(this);
    console.log($('.item-link').children());
    var product_id = product.data('id').slice(1);
    var product_name = product.data('productname');
    var product_slug = product.data('productslug');
    console.log(product_name + ' nomie');
    addCart(product_id, elementNumber.val());
    $('#modalNew').show();
    $('#informModalCartCompare').html("<div>\n            \u0422\u043E\u0432\u0430\u0440 <a href=\"/products/".concat(product_slug, "\">").concat(product_name, "</a> \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D \u0432 <a href=\"/cart-list\">\u043A\u043E\u0440\u0437\u0438\u043D\u0443</a>!\n</div>")); // showNotification('modal-header-success', 'Успешно!', 'Let');
  });
});

function tokenActivate() {
  var send = XMLHttpRequest.prototype.send,
      token = $('meta[name="csrf-token"]').attr('content');

  XMLHttpRequest.prototype.send = function (data) {
    this.setRequestHeader('X-CSRF-Token', token);
    return send.apply(this, arguments);
  };
}

tokenActivate();

function showNotification(type, header, text) {
  console.log('workings');
  $("body").append('<div id="notification-modal" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="SmallModalInfo"><div class="modal-dialog modal-sm"><div class="modal-content"><div id="notification-type" class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><h4 class="modal-title" id="notification-status"></h4></div><div id="notification-area" class="modal-body"></div></div></div></div>');
  $("#notification-area").html(text); // $('#myInput').modal('show');

  $("#notification-status").html(header);
  $("#notification-type").addClass(type);
  $("#notification-modal").modal('show');
}

function removeCartList(cartProduct) {
  $.ajax({
    url: '/remove-cart',
    method: 'POST',
    data: cartProduct,
    dataType: 'json',
    success: function success(data) {
      if (data.data === 'success') {
        var containerCounter = $('#counterCartRed');
        var ids = 'cartActive' + cartProduct.product_id; // console.log($('#' + ids));

        $('#' + ids).removeClass('selected_cart');
        var counterCartNumber = $('#counterCartItems').val();

        if (counterCartNumber > 0) {
          counterCartNumber = counterCartNumber - 1;
          containerCounter.text(counterCartNumber);
          $('#counterCartItems').val(counterCartNumber);

          if (counterCartNumber === 0) {
            $('.cartHeaderGoToCart').hide();
            $('#cart_none').show();
            $('#card_body').hide();
            $('.mbcart span').removeClass('counter');
          } else {
            return true;
          }
        } else {
          $('.cartHeaderGoToCart').hide();
          $('#cart_none').show();
          $('#card_body').hide();
          $('.mbcart span').removeClass('counter');
        }
      } else {
        // console.log('loging second loging')
        var product_id_local = localStorage.getItem('product_id');
        product_id_local = JSON.parse(product_id_local);
        console.log(cartProduct.product_id);

        var _ids = 'cartActive' + cartProduct.product_id;

        console.log($('#' + _ids));
        $('#' + _ids).removeClass('selected_cart');
        product_id_local = product_id_local.filter(function (item) {
          return item.product_id !== cartProduct.product_id;
        });
        console.log(product_id_local);
        localStorage.removeItem('product_id');
        localStorage.setItem('product_id', JSON.stringify(product_id_local));
        var productID_carts = '';

        for (var i = 0; i < product_id_local.length; i++) {
          productID_carts += product_id_local[i].product_id;
        }

        if (window.location.href.includes('/cart-list')) {
          window.location.href = window.location.origin + '/cart-list?product_id=' + product_id_local;
          $('#' + cartProduct.product_id).hide();
        }
      }
    },
    error: function error(data) {
      console.log(data);
    }
  });
}

var compare_count = 0;
$("div.libra").click(function (event) {
  if (localStorage.getItem('compare_product').split(',').length <= 3) {
    $(this).addClass('selected_libra');
  }

  compare_count += 1;
  setTimeout(function () {
    $("a#dropdownComparison > i > span").addClass("counter");
    $("a#dropdownComparison > i > span.counter").text(compare_count);
  }, 100);
  event.preventDefault();
});

/***/ }),

/***/ 7:
/*!*******************************************!*\
  !*** multi ./resources/assets/js/cart.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/user/web/upguz_laravel/resources/assets/js/cart.js */"./resources/assets/js/cart.js");


/***/ })

/******/ });